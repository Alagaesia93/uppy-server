[global.ssh]
  key_dir = "./ssh"
  appname = "uppy-server"

[global.ansiblecfg.privilege_escalation]
  become = true

[global.ansiblecfg.defaults]
  host_key_checking = "False"

[infra.provider.aws]
  access_key = "${var.FREY_AWS_ACCESS_KEY}"
  secret_key = "${var.FREY_AWS_SECRET_KEY}"
  region     = "us-east-1"

[infra.variable.ami.default]
  # tosip-main-ec2-ebs200-v14.4.4
  us-east-1 = "ami-37bde352"

[infra.variable.region]
  default = "us-east-1"

[infra.variable.ip_all]
  default = "0.0.0.0/0"
[infra.variable.ip_kevin]
  default = "62.163.187.106/32"
[infra.variable.ip_marius]
  default = "84.146.5.70/32"
[infra.variable.ip_tim]
  default = "24.134.75.132/32"

[infra.output.public_address]
  value = "${aws_instance.uppy-server.0.public_dns}"
[infra.output.public_addresses]
  value = "${join(\"\n\", aws_instance.uppy-server.*.public_dns)}"

[infra.resource.aws_key_pair.uppy-server]
  key_name   = "uppy-server"
  public_key = "${file(\"{{{config.global.ssh.publickey_file}}}\")}"

[infra.resource.aws_instance.uppy-server]
  ami             = "${lookup(var.ami, var.region)}"
  instance_type   = "c1.medium"
  key_name        = "${aws_key_pair.uppy-server.key_name}"
  security_groups = ["fw-uppy-server"]
  [infra.resource.aws_instance.uppy-server.connection]
    key_file = "{{{config.global.ssh.privatekey_file}}}"
    user     = "{{{config.global.ssh.user}}}"
  [[infra.resource.aws_instance.uppy-server.tags]]
    Name = "${var.FREY_DOMAIN}"

  # This is important to make sure we test and wait until SSH becomes available
  # otherwise install will fail with an UNREACHABLE
  [infra.resource.aws_instance.uppy-server.provisioner.remote-exec]
    inline = [ "sudo pwd" ]
    [infra.resource.aws_instance.uppy-server.provisioner.remote-exec.connection]
      key_file = "{{{config.global.ssh.privatekey_file}}}"
      user     = "{{{config.global.ssh.user}}}"

[infra.resource.aws_route53_record.www]
  name    = "${var.FREY_DOMAIN}"
  records = ["${aws_instance.uppy-server.public_dns}"]
  ttl     = "300"
  type    = "CNAME"
  zone_id = "${var.FREY_AWS_ZONE_ID}"

[infra.resource.aws_security_group.fw-uppy-server]
  description = "Infra uppy-server"
  name        = "fw-uppy-server"
  [[infra.resource.aws_security_group.fw-uppy-server.ingress]]
    cidr_blocks = ["${var.ip_all}"]
    from_port   = 22
    protocol    = "tcp"
    to_port     = 22
  [[infra.resource.aws_security_group.fw-uppy-server.ingress]]
    cidr_blocks = ["${var.ip_all}"]
    from_port   = 3020
    protocol    = "tcp"
    to_port     = 3020

[[install.playbooks]]
  hosts = "uppy-server"
  name  = "Install uppy-server"

  [[install.playbooks.roles]]
    role         = "{{{init.paths.roles_dir}}}/apt/v1.0.0"
    apt_packages = [
      "apg",
      "build-essential",
      "curl",
      "git-core",
      "htop",
      "iotop",
      "libpcre3",
      "logtail",
      "mlocate",
      "mtr",
      "mysql-client",
      "psmisc",
      "telnet",
      "vim",
      "wget",
    ]

  [[install.playbooks.roles]]
    role = "{{{init.paths.roles_dir}}}/unattended-upgrades/v1.2.0"

  [[install.playbooks.tasks]]
    action = "lineinfile dest=/home/ubuntu/.bashrc line=\"alias wtf='sudo tail -f /var/log/*{log,err} /var/log/{dmesg,messages,*{,/*}{log,err}}'\""
    name   = "Common | Add convenience shortcut wtf"

[[setup.playbooks]]
  hosts = "uppy-server"
  name  = "Setup uppy-server"

  [[setup.playbooks.roles]]
    role = "{{{init.paths.roles_dir}}}/nodejs/v2.1.1"
    nodejs_version = "4.x"

  [[setup.playbooks.tasks]]
    hostname = "name={{lookup('env', 'FREY_DOMAIN')}}"
    name     = "uppy-server | Set hostname"

  [[setup.playbooks.tasks]]
    file = "path=/srv/uppy-server/shared/logs state=directory owner=www-data group=www-data mode=0755 recurse=yes"
    name = "uppy-server | Create shared log dir"

  [[setup.playbooks.tasks]]
    file = "path=/mnt/uppy-server-data state=directory owner=www-data group=www-data mode=0755 recurse=yes"
    name = "uppy-server | Create uppy data dir"

  [[setup.playbooks.tasks]]
    action = "template src=templates/upstart-uppy-server.conf.j2 dest=/etc/init/uppy-server.conf"
    name   = "uppy-server | Install upstart file"

[[deploy.playbooks]]
  hosts = "uppy-server"
  name  = "Deploy uppy-server"

  [[install.playbooks.roles]]
    role                     = "{{{init.paths.roles_dir}}}/deploy/v1.3.0"
    ansistrano_deploy_from   = "{{{init.cliargs.projectDir}}}"
    ansistrano_deploy_to     = "/srv/uppy-server"
    ansistrano_shared_paths  = [ "logs" ]
    ansistrano_deploy_via    = "git"
    ansistrano_keep_releases = 10
    ansistrano_git_repo      = "https://github.com/transloadit/uppy-server.git"

  [[deploy.playbooks.tasks]]
    copy = "src=../env.sh dest=/srv/uppy-server/current/env.sh mode=0600 owner=root group=root"
    name = "uppy-server | Upload environment"

  [[deploy.playbooks.tasks]]
    npm  = "path=/srv/uppy-server/current production=yes"
    name = "uppy-server | Install node modules"

[[restart.playbooks]]
  hosts = "uppy-server"
  name  = "Restart uppy-server"

  [[restart.playbooks.tasks]]
    action = "service name=uppy-server state=restarted"
    name   = "uppy-server | Restart"
